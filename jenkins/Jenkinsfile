pipeline {
	agent any

	stages {
		stage('Unit Tests Backend') {
			agent {
				docker {
					image 'snakee/golang-junit:1.21'
					reuseNode true
				}
			}
			environment {
				XDG_CACHE_HOME = '/tmp/.cache'
				GOMODCACHE = '/tmp/go-mod-cache'
			}
			steps {
				dir('bugtracker-backend') {
					sh 'go test -v ./... 2>&1 | go-junit-report > test-results.xml || true'
				}
			}
			post {
				always {
					junit 'bugtracker-backend/test-results.xml'
				}
			}
		}

		stage('Unit Tests Frontend') {
			agent {
				docker {
					image 'node:20-alpine'
					reuseNode true
				}
			}
			steps {
				dir('bugtracker-frontend') {
					sh '''
					npm ci
					npm test
				'''
				}
			}
			post {
				always {
					junit 'bugtracker-frontend/test-results.xml'
				}
			}
		}
	}
}